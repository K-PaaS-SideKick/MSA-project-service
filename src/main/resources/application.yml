spring:
  config:
    import: vault://
  cloud:
    vault:
      uri: http://198.19.227.58:15201  # Vault 서버 주소
      authentication: token
      token: ${VAULT_SECRET}
      kv:
        enabled: true
        backend: secret
        default-context: mysql
  datasource:
    url: ${vault.datasource.url}
    username: ${vault.datasource.username}
    password: ${vault.datasource.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  application:
    name: project-service
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
#  kafka:
#    bootstrap-servers: kafka.dev.svc.cluster.local:9092
#    consumer:
#      group-id: sidekick
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
server:
  port: 8081

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://198.18.0.169:8761/eureka
    enabled: false
  instance:
    hostname: localhost
    prefer-ip-address: true

#logging:
#  level:
#    org.springframework.cloud.vault: DEBUG
#    org.springframework.boot: DEBUG
#    com.zaxxer.hikari: DEBUG